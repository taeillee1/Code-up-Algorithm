import java.util.Stack;

class Solution {
    public int solution(int[][] board, int[] moves) {
        int answer = 0;
        Stack<Integer> s = new Stack<Integer>();//담을 곳을 만들기위해서 스택을 구현
        s.push(0);
        for(int i=0; i< moves.length; i++){
            for(int j=0; j<board.length; j++){
                if(board[j][moves[i]-1]!=0){//board에 인형이 존재한다면
                    if(s.isEmpty()){//담을 곳이 비어있다면
                        s.push(board[j][moves[i]-1]);//스택에 추가한다
                    }else{//담을 곳이 비어있지않다면 비교를 해야겠지 같은것인가 아닌가
                        if(s.peek().equals(board[j][moves[i]-1])){
                            s.pop();
                            answer+=2;
                        }else{
                            s.push(board[j][moves[i]-1]);
                        }
                    }
                    board[j][moves[i]-1]=0;//인형을 판때기에서 꺼냇으니까 그위치의 인형은 0으로 만든다.
                    break;
                }
            }
        }
        
        
        return answer;
    }
}